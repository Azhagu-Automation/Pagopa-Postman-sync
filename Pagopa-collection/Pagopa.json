{
  "info": {
    "_postman_id": "2306b841-4e03-4ca4-894e-69b2319b4508",
    "name": "Pagopa",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "init",
      "item": [
        {
          "name": "TC1_ToGenerate the token for user_Nodapa",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var title = \"TC1_INIT - Verify user able to generate the token for user\";",
                  "tests[title]= title;",
                  "",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "pm.environment.set(\"Nodapa_token\", jsonData.tokenId);     ",
                  "",
                  "pm.test(\"TokenID is Generated\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"tokenId\");",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "ec2c38fe-bd30-46df-ae54-9a5789e45d2a"
              }
            }
          ],
          "_postman_id": "e1a345ff-96f6-402c-876e-35be0362a6e3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-OpenAM-Username",
                "value": "00003580"
              },
              {
                "key": "X-OpenAM-Password",
                "value": "1111"
              },
              {
                "key": "X-Forwarded-For",
                "value": "192.50.51.84"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [],
              "options": {
                "formdata": {}
              }
            },
            "url": {
              "raw": "{{sso}}/json/authenticate?realm=/internet&authIndexType=service&authIndexValue=ibstep1auth01 ",
              "host": [
                "{{sso}}"
              ],
              "path": [
                "json",
                "authenticate"
              ],
              "query": [
                {
                  "key": "realm",
                  "value": "/internet"
                },
                {
                  "key": "authIndexType",
                  "value": "service"
                },
                {
                  "key": "authIndexValue",
                  "value": "ibstep1auth01 "
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "TC2_Verify when user given contoordinate is one",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC2_INIT - Verify when user given contoordinate is one\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "//Get NumeroConto value\r",
                  "var NumeroConto = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:ListaContiOrdinanteCompatibili\"][\"inp1:ContoOrdinante\"][\"inp1:NumeroContoNCH\"];\r",
                  "console.log(\"Numeroconto is\", NumeroConto);\r",
                  "\r",
                  "var DataContabile = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:DataContabile\"];\r",
                  "console.log(\"DataContabile is\", DataContabile);\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Motivazione\"];\r",
                  "console.log(\"Motivazione is\", Motivazione);\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Esito\"];\r",
                  "console.log(\"Esito is\", Esito);\r",
                  "\r",
                  "tests [\"Conto_Ordinate is      ----->  \"+NumeroConto] =NumeroConto ===\"11O1641490340\";\r",
                  "tests [\"DataContabile is      ----->  \"+DataContabile] =DataContabile;\r",
                  "tests [\"DataContabile is      ----->  \"+Motivazione] =Motivazione;\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito;"
                ],
                "type": "text/javascript",
                "id": "d0d4b56e-ffcf-47e0-8c0e-c578dbb9dfd1"
              }
            }
          ],
          "_postman_id": "ea5b3a94-10b2-40e0-8afe-358d9e7a2ca9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:initPagamentoPARequest>\r\n            <pag:RichiestaInitNodoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <pag:ContoList>\r\n                    <!--1 or more repetitions:-->\r\n                    <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n                </pag:ContoList>\r\n            </pag:RichiestaInitNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:initPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC3_Verify when user given contoordinate is MULITPLE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC3_INIT - Verify when user given contoordinate is MULTIPLE\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "//-----------------------------***********************------------------------------------------\r",
                  "var path = jsonData['soapenv:Envelope']['S:Body']['inp1:initPagamentoPAResponse']['inp1:RipostaInitNodoPA']['inp1:ListaContiOrdinanteCompatibili']['inp1:ContoOrdinante'];\r",
                  "console.log(path);\r",
                  "\r",
                  "var NumeroContoNCH = [];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var i = 0; i < path.length; i++) {\r",
                  "var length = path.length;\r",
                  "pm.environment.set(\"Noofnumeroconto\", length);\r",
                  "NumeroContoNCH.push(path[i]['inp1:NumeroContoNCH'])\r",
                  "//console.log(NumeroContoNCH);\r",
                  "}\r",
                  "//-----------------------------***********************------------------------------------\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:initPagamentoPAResponse']['inp1:RipostaInitNodoPA']['inp1:AllowedPaymentDateCollection']['inp1:AllowedPaymentDate'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var Paymentdate = [];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpaymentdate = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "Paymentdate.push(root[j]['inp1:AllowedPaymentDate'])\r",
                  "\r",
                  "}\r",
                  "//-----------------------------***********************------------------------------------\r",
                  "\r",
                  "\r",
                  "\r",
                  "var DataContabile = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:DataContabile\"];\r",
                  "console.log(\"DataContabile is\", DataContabile);\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Motivazione\"];\r",
                  "console.log(\"Motivazione is\", Motivazione);\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Esito\"];\r",
                  "console.log(\"Esito is\", Esito);\r",
                  "\r",
                  "tests[\"noofconto is -->\"+NumeroContoNCH]=NumeroContoNCH;\r",
                  "tests[\"noOfdate is -->\"+noofpaymentdate]=noofpaymentdate;\r",
                  "tests [\"DataContabile is      ----->  \"+DataContabile] =DataContabile;\r",
                  "tests [\"DataContabile is      ----->  \"+Motivazione] =Motivazione;\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito;\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "f356fcc1-c046-4044-b506-ebc92c83a9bb"
              }
            }
          ],
          "_postman_id": "1647ea9d-bd33-49bc-a88e-c3567df130b2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:initPagamentoPARequest>\r\n            <pag:RichiestaInitNodoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <pag:ContoList>\r\n                    <!--1 or more repetitions:-->\r\n                    <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n                    <pag:ContoOrdinante>1152682673950</pag:ContoOrdinante>\r\n                </pag:ContoList>\r\n            </pag:RichiestaInitNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:initPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC4_Verify when user given contoordinate=EMPTY",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC4_INIT - Verify when user given contoordinate=EMPTY\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Il campo ContoOrdinante e' obbligatorio\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";"
                ],
                "type": "text/javascript",
                "id": "57a036a2-88d1-4254-8629-41224d8d3d21"
              }
            }
          ],
          "_postman_id": "da945cd0-9cd9-4f87-922d-a3fe39881b3e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:initPagamentoPARequest>\r\n            <pag:RichiestaInitNodoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <pag:ContoList>\r\n                    <!--1 or more repetitions:-->\r\n                    <pag:ContoOrdinante></pag:ContoOrdinante>\r\n                   \r\n                </pag:ContoList>\r\n            </pag:RichiestaInitNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:initPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC5_Verify when user given contoordinate=INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC4_INIT - Verify when user given contoordinate=INVALID\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"La lista dei conti e' vuota\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";"
                ],
                "type": "text/javascript",
                "id": "1eae3fa0-71e5-480f-ad0c-b28e5b4fed0a"
              }
            }
          ],
          "_postman_id": "3bf3c353-c64e-455c-b2b6-01ccdf547572",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:initPagamentoPARequest>\r\n            <pag:RichiestaInitNodoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <pag:ContoList>\r\n                    <!--1 or more repetitions:-->\r\n                    <pag:ContoOrdinante>O164149034</pag:ContoOrdinante>\r\n                   \r\n                </pag:ContoList>\r\n            </pag:RichiestaInitNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:initPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC6_Verify when user given contoordinate=NULL",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC4_INIT - Verify when user given contoordinate=NULL\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:initPagamentoPAResponse\"][\"inp1:RipostaInitNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"La lista dei conti e' vuota\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";"
                ],
                "type": "text/javascript",
                "id": "201eafda-849a-4cd8-a3b4-e89670e6c6e0"
              }
            }
          ],
          "_postman_id": "74ad3eb0-fa45-4c6c-985f-f8962409a719",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:initPagamentoPARequest>\r\n            <pag:RichiestaInitNodoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <pag:ContoList>\r\n                    <!--1 or more repetitions:-->\r\n                    <pag:ContoOrdinante>NULL</pag:ContoOrdinante>\r\n                   \r\n                </pag:ContoList>\r\n            </pag:RichiestaInitNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:initPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        }
      ],
      "_postman_id": "e0ddd58e-49be-4b62-b4ad-ace86fdf79fe"
    },
    {
      "name": "Verifica",
      "item": [
        {
          "name": "TC1_Verify Pagopa is payable  if the user given VALID Numeroavvisso &IdentificativoPA&contoordinate & date=today",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC1_Verifica_Verify Pagopa is payable if the user given valid Numeroavvisso &IdentificativoPA&contoordinate\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Divisa = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "\r",
                  "var Commission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Commissione\"];\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var CodiceContestoPagamento=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"commission is      ----->  \"+Commission] =Commission ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"PagoPA validato con successo e pagabile\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito;"
                ],
                "type": "text/javascript",
                "id": "9a5cb0e0-94d5-48d2-b209-83daf8a85bd4"
              }
            }
          ],
          "_postman_id": "3747a3a4-79ff-4fe0-8442-e757a1043ccb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:verificaPagamentoPARequest>\r\n            <pag:RichiestaVerificaPagamentoNodoPA>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante/>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:DataPagamentoRichiesta>{{today}}</pag:DataPagamentoRichiesta>\r\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n                <pag:NumeroAvviso>{{Verifica_NumeroAvisso}}</pag:NumeroAvviso>\r\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\r\n                <!--Optional:-->\r\n                <pag:Product>9</pag:Product>\r\n                <!--Optional:-->\r\n                <pag:ForzaturaCommissioneBanca/>\r\n            </pag:RichiestaVerificaPagamentoNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:verificaPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC2_Verify Pagopa is payable  if the user given VALID Numeroavvisso &IdentificativoPA&contoordinate & date=today_Bookingpayment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC2_Verifica_Verify Pagopa is payable if the user given valid Numeroavvisso &IdentificativoPA&contoordinate\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Divisa = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "\r",
                  "var Commission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Commissione\"];\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var CodiceContestoPagamento=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"commission is      ----->  \"+Commission] =Commission ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"PagoPA validato con successo e pagabile\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito;"
                ],
                "type": "text/javascript",
                "id": "6d30274c-18ce-43eb-9bde-f48b30e86cd6"
              }
            }
          ],
          "_postman_id": "98090d44-98d4-48c1-9f4f-c367a7d753ff",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:verificaPagamentoPARequest>\r\n            <pag:RichiestaVerificaPagamentoNodoPA>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante/>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:DataPagamentoRichiesta>{{today}}</pag:DataPagamentoRichiesta>\r\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n                <pag:NumeroAvviso>{{Booking_Numeroavviso}}</pag:NumeroAvviso>\r\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\r\n                <!--Optional:-->\r\n                <pag:Product>9</pag:Product>\r\n                <!--Optional:-->\r\n                <pag:ForzaturaCommissioneBanca/>\r\n            </pag:RichiestaVerificaPagamentoNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:verificaPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC3_Verify Pagopa is payable  if the user given VALID Numeroavvisso &IdentificativoPA&contoordinate & date=today_Bookingpayment-Repeat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC3_Verify Pagopa is payable  if the user given VALID Numeroavvisso &IdentificativoPA&contoordinate & date=today_Bookingpayment-Repeat\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Divisa = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "\r",
                  "var Commission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Commissione\"];\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var CodiceContestoPagamento=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"commission is      ----->  \"+Commission] =Commission ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"PagoPA validato con successo e pagabile\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito;"
                ],
                "type": "text/javascript",
                "id": "06d1db06-7343-4bdb-bac6-cfd9a3d2a656"
              }
            }
          ],
          "_postman_id": "5d38fac0-23a3-4c89-a6f0-4233f770935d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:verificaPagamentoPARequest>\r\n            <pag:RichiestaVerificaPagamentoNodoPA>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante/>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:DataPagamentoRichiesta>{{today}}</pag:DataPagamentoRichiesta>\r\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n                <pag:NumeroAvviso>{{Booking_Numeroavviso_payment2}}</pag:NumeroAvviso>\r\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\r\n                <!--Optional:-->\r\n                <pag:Product>9</pag:Product>\r\n                <!--Optional:-->\r\n                <pag:ForzaturaCommissioneBanca/>\r\n            </pag:RichiestaVerificaPagamentoNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:verificaPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC4_Verify Pagopa is payable  if the user given INVALID Numeroavvisso",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC4_Verify Pagopa is payable  if the user given INVALID Numeroavvisso\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var CodiceErrore=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:CodiceErrore\"];\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "tests[\"CodiceErrore is -->\"+CodiceErrore]=CodiceErrore ===\"NODO-0015\";\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione===\"La lunghezza massima di NumeroAvviso e 18\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito;"
                ],
                "type": "text/javascript",
                "id": "f5dfb98c-f357-4716-bfec-20f1e0eab790"
              }
            }
          ],
          "_postman_id": "cd4923ef-568b-4678-a646-ee74ec45acb0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:verificaPagamentoPARequest>\r\n            <pag:RichiestaVerificaPagamentoNodoPA>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante/>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:DataPagamentoRichiesta>{{today}}</pag:DataPagamentoRichiesta>\r\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n                <pag:NumeroAvviso>1830698298024475806</pag:NumeroAvviso>\r\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\r\n                <!--Optional:-->\r\n                <pag:Product>9</pag:Product>\r\n                <!--Optional:-->\r\n                <pag:ForzaturaCommissioneBanca/>\r\n            </pag:RichiestaVerificaPagamentoNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:verificaPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC5_Verify Pagopa is payable  if the user given INVALID Numeroavvisso &IdentificativoPA&contoordinate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC5_Verify Pagopa is payable  if the user given INVALID Numeroavvisso &IdentificativoPA&contoordinate\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var CodiceErrore =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:verificaPagamentoPAResponse\"][\"inp1:RispostaVerificaPagamentoNodoPA\"][\"inp1:CodiceErrore\"];\r",
                  "\r",
                  "\r",
                  "tests [\"CodiceErrore is      ----->  \"+CodiceErrore] =CodiceErrore;\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"La lunghezza massima di contoOrdinante e 11 or 13\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito;"
                ],
                "type": "text/javascript",
                "id": "2f0e2f53-96f6-418a-b9ed-d52237f651c4"
              }
            }
          ],
          "_postman_id": "6e5b4ed0-38df-48d6-a80c-23d19b4d4873",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:verificaPagamentoPARequest>\r\n            <pag:RichiestaVerificaPagamentoNodoPA>\r\n                <!--Optional:-->\r\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\r\n                <!--Optional:-->\r\n                <pag:IdentificativoOrdinante/>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <!--Optional:-->\r\n                <pag:DataPagamentoRichiesta>{{today}}</pag:DataPagamentoRichiesta>\r\n                <pag:ContoOrdinante>18306983155308530</pag:ContoOrdinante>\r\n                <pag:NumeroAvviso>{{Verifica_NumeroAvisso}}</pag:NumeroAvviso>\r\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\r\n                <!--Optional:-->\r\n                <pag:Product>9</pag:Product>\r\n                <!--Optional:-->\r\n                <pag:ForzaturaCommissioneBanca/>\r\n            </pag:RichiestaVerificaPagamentoNodoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:verificaPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        }
      ],
      "_postman_id": "7e7af102-e4e8-4008-ae7d-120b843c4bed"
    },
    {
      "name": "PagamentoPa",
      "item": [
        {
          "name": "TC1_Verify user able to do Currentdate payment for the VALID Numero Avvisso & CurrentDate",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ce914802-414a-4192-9ac3-5fd366f478b6",
                "exec": [
                  "\r",
                  "var title = \"TC1_Verify user able to do payment for the VALID Numero Avvisso\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Divisa = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "\r",
                  "var Commission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CommissioneBanca\"];\r",
                  "\r",
                  "var Credentials_payer = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CredenzialiPagatore\"];\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var CodiceContestoPagamento=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "\r",
                  "var IdPagoPA=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:IdPagoPA\"];\r",
                  "pm.environment.set(\"payment_IdPagoPA\",IdPagoPA);\r",
                  "\r",
                  "\r",
                  "var IUV=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:IUV\"];\r",
                  "pm.environment.set(\"payment_IUV\",IUV);\r",
                  "\r",
                  "var NumeroOperazioneContabile=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:NumeroOperazioneContabile\"];\r",
                  "pm.environment.set(\"payment_NumeroOperazioneContabile\",NumeroOperazioneContabile);\r",
                  "\r",
                  "var NotazioneInformativa=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:NotazioneInformativa\"];\r",
                  "\r",
                  "\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests[\"idpagopa is ---- >\"+IdPagoPA]=IdPagoPA;\r",
                  "tests[\"payment IUV is --->\"+IUV]=IUV;\r",
                  "\r",
                  "tests[\"NumeroOperazioneContabile is ---->\"+NumeroOperazioneContabile]=NumeroOperazioneContabile;\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"commission is      ----->  \"+Commission] =Commission ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Pagamento PagoPA avvenuto con successo\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"OK\";\r",
                  "tests[\"NotazioneInformativa status is --->\"+NotazioneInformativa]=NotazioneInformativa ===\"Pagamento aggiornato\""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a59243fc-e512-41a4-b671-a99c23a9bbde",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <pag:pagamentoPARequest>\n            <pag:RichiestaPagamentoPA>\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\n                <!--Optional:-->\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\n                <pag:AbiCode>03268</pag:AbiCode>\n                <!--Optional:-->\n                <pag:DataPagamentoRichiesta>{{today}}</pag:DataPagamentoRichiesta>\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\n                <pag:NumeroAvviso>{{Verifica_NumeroAvisso}}</pag:NumeroAvviso>\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\n                <pag:NumeroAvviso></pag:NumeroAvviso>\n                <!--Optional:-->\n                <pag:ForzaturaCommissioneBanca></pag:ForzaturaCommissioneBanca>\n            </pag:RichiestaPagamentoPA>\n            <pag:MessageContext>\n                <bas:Sender>InternetBanking</bas:Sender>\n                <bas:ABI>03268</bas:ABI>\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\n            </pag:MessageContext>\n        </pag:pagamentoPARequest>\n    </soapenv:Body>\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_payment_URL}}"
          },
          "response": []
        },
        {
          "name": "TC2_Verify user able to do Booking date payment for the VALID Numero Avvisso&BookingDate",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "91b66e99-fd14-41fb-8fbc-951695f958e0",
                "exec": [
                  "\r",
                  "var title = \"TC2_Verify user able to do payment for the VALID Numero Avvisso & Booking Date\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Divisa = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "\r",
                  "var Commission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CommissioneBanca\"];\r",
                  "\r",
                  "var Credentials_payer = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CredenzialiPagatore\"];\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var CodiceContestoPagamento=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "\r",
                  "var IdPagoPA=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:IdPagoPA\"];\r",
                  "pm.environment.set(\"Bookingpayment_IdPagoPA\",IdPagoPA);\r",
                  "\r",
                  "\r",
                  "var NotazioneInformativa=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:NotazioneInformativa\"];\r",
                  "\r",
                  "\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests[\"idpagopa is ---- >\"+IdPagoPA]=IdPagoPA;\r",
                  "\r",
                  "\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"commission is      ----->  \"+Commission] =Commission ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Prenotazione pagoPA effettuata con successo\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"OK\";\r",
                  "tests[\"NotazioneInformativa status is --->\"+NotazioneInformativa]=NotazioneInformativa ===\"Pagamento aggiornato\""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "3b4db2c1-2bdc-48ce-bdec-369159442bb6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <pag:pagamentoPARequest>\n            <pag:RichiestaPagamentoPA>\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\n                <!--Optional:-->\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\n                <pag:AbiCode>03268</pag:AbiCode>\n                <!--Optional:-->\n                <pag:DataPagamentoRichiesta>{{BookingPayment}}</pag:DataPagamentoRichiesta>\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\n                <pag:NumeroAvviso>{{Booking_Numeroavviso}}</pag:NumeroAvviso>\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\n                <pag:NumeroAvviso></pag:NumeroAvviso>\n                <!--Optional:-->\n                <pag:ForzaturaCommissioneBanca></pag:ForzaturaCommissioneBanca>\n            </pag:RichiestaPagamentoPA>\n            <pag:MessageContext>\n                <bas:Sender>InternetBanking</bas:Sender>\n                <bas:ABI>03268</bas:ABI>\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\n            </pag:MessageContext>\n        </pag:pagamentoPARequest>\n    </soapenv:Body>\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_payment_URL}}"
          },
          "response": []
        },
        {
          "name": "TC4_Validate the respone details if Numero avviso is already paid",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "efd99c95-c98c-41dd-8748-3fac269c87f3",
                "exec": [
                  "\r",
                  "var title = \"TC4_Verify the respone for already payed Numero Avviso\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"0300 - Transazione non autorizzata dall'Azienda (causa Tecnica) - MessaggioErrore - pagamento in attesa risulta concluso al sistema pagopa\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "7daf3c71-3507-490c-837c-68a44c7a2126",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <pag:pagamentoPARequest>\n            <pag:RichiestaPagamentoPA>\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\n                <!--Optional:-->\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\n                <pag:AbiCode>03268</pag:AbiCode>\n                <!--Optional:-->\n                <pag:DataPagamentoRichiesta>{{today}}</pag:DataPagamentoRichiesta>\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\n                <pag:NumeroAvviso>{{Verifica_NumeroAvisso}}</pag:NumeroAvviso>\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\n                <pag:NumeroAvviso></pag:NumeroAvviso>\n                <!--Optional:-->\n                <pag:ForzaturaCommissioneBanca></pag:ForzaturaCommissioneBanca>\n            </pag:RichiestaPagamentoPA>\n            <pag:MessageContext>\n                <bas:Sender>InternetBanking</bas:Sender>\n                <bas:ABI>03268</bas:ABI>\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\n            </pag:MessageContext>\n        </pag:pagamentoPARequest>\n    </soapenv:Body>\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_payment_URL}}"
          },
          "response": []
        },
        {
          "name": "TC3_Verify user able to do Booking date payment for the VALID Numero Avvisso&BookingDate -Repeat",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4613d5b-3f61-41ee-b667-b5cec147b5aa",
                "exec": [
                  "\r",
                  "var title = \"TC3_Verify user able to do payment for the VALID Numero Avvisso & Booking Date\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Divisa = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "\r",
                  "var Commission = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CommissioneBanca\"];\r",
                  "\r",
                  "var Credentials_payer = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CredenzialiPagatore\"];\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var CodiceContestoPagamento=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "\r",
                  "var IdPagoPA=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:IdPagoPA\"];\r",
                  "pm.environment.set(\"Bookingpayment2_IdPagoPA\",IdPagoPA);\r",
                  "\r",
                  "var NotazioneInformativa=jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:pagamentoPAResponse\"][\"inp1:RipostaPagamentoPA\"][\"inp1:NotazioneInformativa\"];\r",
                  "\r",
                  "\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests[\"idpagopa is ---- >\"+IdPagoPA]=IdPagoPA;\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"commission is      ----->  \"+Commission] =Commission ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Prenotazione pagoPA effettuata con successo\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"OK\";\r",
                  "tests[\"NotazioneInformativa status is --->\"+NotazioneInformativa]=NotazioneInformativa ===\"Pagamento aggiornato\""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6a738e34-9b86-4479-bac3-39d80f201766",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\n    <soapenv:Header/>\n    <soapenv:Body>\n        <pag:pagamentoPARequest>\n            <pag:RichiestaPagamentoPA>\n                <pag:IdSoggetto>1321</pag:IdSoggetto>\n                <!--Optional:-->\n                <pag:IdentificativoOrdinante></pag:IdentificativoOrdinante>\n                <pag:AbiCode>03268</pag:AbiCode>\n                <!--Optional:-->\n                <pag:DataPagamentoRichiesta>{{BookingPayment}}</pag:DataPagamentoRichiesta>\n                <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\n                <pag:NumeroAvviso>{{Booking_Numeroavviso_payment2}}</pag:NumeroAvviso>\n                <pag:IdentificativoPA>{{IdentificativoPA}}</pag:IdentificativoPA>\n                <pag:NumeroAvviso></pag:NumeroAvviso>\n                <!--Optional:-->\n                <pag:ForzaturaCommissioneBanca></pag:ForzaturaCommissioneBanca>\n            </pag:RichiestaPagamentoPA>\n            <pag:MessageContext>\n                <bas:Sender>InternetBanking</bas:Sender>\n                <bas:ABI>03268</bas:ABI>\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\n            </pag:MessageContext>\n        </pag:pagamentoPARequest>\n    </soapenv:Body>\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_payment_URL}}"
          },
          "response": []
        }
      ],
      "_postman_id": "46eb1edd-cf46-4f5f-ab14-8b25c55d532a"
    },
    {
      "name": "AnnulloPagamentoPA",
      "item": [
        {
          "name": "TC1_Verify the User able to cancel the \"PRENATO\" Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC1_Verify the User able to cancel the PRENATO Payment\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Prenotazione pagoPA annullata con successo\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"OK\";\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "573e2a92-204e-48a1-89ef-320e3d52f637"
              }
            }
          ],
          "_postman_id": "a94e6f59-594b-458f-9291-0113bb50201f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:annulloPagamentoPARequest>\r\n            <pag:RichiestaAnnulloPagamentoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <pag:IdPagamentoPA>{{Bookingpayment_IdPagoPA}}</pag:IdPagamentoPA>\r\n            </pag:RichiestaAnnulloPagamentoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:annulloPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC2_Verify already cancelled payment response and error message",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC2_Verify already cancelled payment response and error message\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var CodiceErrore = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:CodiceErrore\"];\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Pagamento NodoPA gia' annullato. Impossibile rieseguire l'annullo della prenotazione\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";\r",
                  "tests [\"CodiceErrore is      ----->  \"+CodiceErrore] =CodiceErrore ===\"NODO-0025\";\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "8003f3c0-c2bb-4f50-b7b6-242c2161207c"
              }
            }
          ],
          "_postman_id": "1467e075-19e4-4fe6-bf1b-b0c7fb7a58a8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:annulloPagamentoPARequest>\r\n            <pag:RichiestaAnnulloPagamentoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <pag:IdPagamentoPA>{{Bookingpayment_IdPagoPA}}</pag:IdPagamentoPA>\r\n            </pag:RichiestaAnnulloPagamentoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:annulloPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC3_Verify the User able to cancel the \"PAGATO\" Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC3_Verify the User able to cancel the PAGATO Payment\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var CodiceErrore = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:annulloPagamentoPAResponse\"][\"inp1:RipostaAnnulloPagamentoPA\"][\"inp1:CodiceErrore\"];\r",
                  "\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Il Pagamento NodoPA non e' in stato prenotato. Impossibile eseguire l'annullo della prenotazione\";\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";\r",
                  "tests [\"CodiceErrore is      ----->  \"+CodiceErrore] =CodiceErrore ===\"NODO-0026\";\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "f19f6aa9-428f-48bd-9cca-e4e59db0f13c"
              }
            }
          ],
          "_postman_id": "ee5d16b6-1021-413a-b10e-a388072aaeda",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n    <soapenv:Header/>\r\n    <soapenv:Body>\r\n        <pag:annulloPagamentoPARequest>\r\n            <pag:RichiestaAnnulloPagamentoPA>\r\n                <pag:AbiCode>03268</pag:AbiCode>\r\n                <pag:IdPagamentoPA>{{payment_IdPagoPA}}</pag:IdPagamentoPA>\r\n            </pag:RichiestaAnnulloPagamentoPA>\r\n            <pag:MessageContext>\r\n                <bas:Sender>InternetBanking</bas:Sender>\r\n                <bas:ABI>03268</bas:ABI>\r\n                <!--Optional:-->\r\n                <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n            </pag:MessageContext>\r\n        </pag:annulloPagamentoPARequest>\r\n    </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        }
      ],
      "_postman_id": "383bbc75-9fc9-4f79-b0d0-9793881066fa"
    },
    {
      "name": "DettaglioPagamentoPA",
      "item": [
        {
          "name": "TC1_Verify the payment details when user give valid payment_IdPagoPA for Currentdate_payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cd781704-f314-4640-90a4-2eb3debe3da2",
                "exec": [
                  "\r",
                  "var title = \"TC1_Verify the payment details when user give valid payment_IdPagoPA for Currentdate_payment\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var CdrRiferimento = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CdrRiferimento\"];\r",
                  "\r",
                  "var CodiceContestoPagamento = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "pm.environment.set(\"Pagato_CodiceContestoPagamento\",CodiceContestoPagamento);\r",
                  "\r",
                  "\r",
                  "var DenominazioneBeneficiario= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DenominazioneBeneficiario\"];\r",
                  "\r",
                  "var Divisa= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "var DataTransazione= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DataTransazione\"];\r",
                  "\r",
                  "var DataContabile= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DataContabile\"];\r",
                  "\r",
                  "var KeyRequest= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:KeyRequest\"];\r",
                  "\r",
                  "var CredenzialiPagatore= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CredenzialiPagatore\"];\r",
                  "\r",
                  "var LocalitaBeneficiario = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:LocalitaBeneficiario\"];\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var NumeroAvviso = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:NumeroAvviso\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var Stato =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Stato\"];\r",
                  "\r",
                  "var TipoStrumento =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:TipoStrumento\"];\r",
                  "\r",
                  "var TipoTransazione =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:TipoTransazione\"];\r",
                  "\r",
                  "var IdTransazione =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:IdTransazione\"];\r",
                  "pm.environment.set(\"IdTransazione\",IdTransazione);\r",
                  "\r",
                  "var IBUserCode =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:IBUserCode\"];\r",
                  "pm.environment.set(\"IBUserCode\",IBUserCode);\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"CdrRiferimento is -->\"+CdrRiferimento]=CdrRiferimento;\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests[\"DenominazioneBeneficiario is -->\"+DenominazioneBeneficiario]=DenominazioneBeneficiario;\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"DataTransazione is      ----->  \"+DataTransazione] =DataTransazione;\r",
                  "tests [\"DataContabile is      ----->  \"+DataContabile] =DataContabile;\r",
                  "tests [\"KeyRequest is      ----->  \"+KeyRequest] =KeyRequest;\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"OK\";\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Pagamento pagoPA effettuato con successo\";\r",
                  "tests [\"NumeroAvviso is      ----->  \"+NumeroAvviso] =NumeroAvviso ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Stato is      ----->  \"+Stato] =Stato;\r",
                  "tests [\"TipoStrumento is      ----->  \"+TipoStrumento] =TipoStrumento;\r",
                  "tests [\"TipoTransazione is      ----->  \"+TipoTransazione] =TipoTransazione ===\"PAGAMENTO\";\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "effc86c4-fd80-4299-babc-8f399023bd3c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:dettaglioPagamentoPARequest>\r\n         <pag:RichiestaDettaglioPagamentoPA>\r\n            <pag:AbiCode>03268</pag:AbiCode>\r\n            <pag:IdPagamentoPA>{{payment_IdPagoPA}}</pag:IdPagamentoPA>\r\n         </pag:RichiestaDettaglioPagamentoPA>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:dettaglioPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC2_Verify the payment details when user give valid payment_IdPagoPA for Bookingpayment",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da6b3355-4085-455f-bc72-8ee1a85008d3",
                "exec": [
                  "\r",
                  "var title = \"TC2_Verify the payment details when user give valid payment_IdPagoPA for Bookingpayment\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var CdrRiferimento = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CdrRiferimento\"];\r",
                  "\r",
                  "var CodiceContestoPagamento = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "pm.environment.set(\"PRENATO_CodiceContestoPagamento\",CodiceContestoPagamento);\r",
                  "\r",
                  "var DenominazioneBeneficiario= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DenominazioneBeneficiario\"];\r",
                  "\r",
                  "var Divisa= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "var DataTransazione= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DataTransazione\"];\r",
                  "\r",
                  "var DataContabile= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DataContabile\"];\r",
                  "\r",
                  "var KeyRequest= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:KeyRequest\"];\r",
                  "\r",
                  "var CredenzialiPagatore= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CredenzialiPagatore\"];\r",
                  "\r",
                  "var LocalitaBeneficiario = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:LocalitaBeneficiario\"];\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var NumeroAvviso = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:NumeroAvviso\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var Stato =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Stato\"];\r",
                  "\r",
                  "var TipoStrumento =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:TipoStrumento\"];\r",
                  "\r",
                  "var TipoTransazione =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:TipoTransazione\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"CdrRiferimento is -->\"+CdrRiferimento]=CdrRiferimento;\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests[\"DenominazioneBeneficiario is -->\"+DenominazioneBeneficiario]=DenominazioneBeneficiario;\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"DataTransazione is      ----->  \"+DataTransazione] =DataTransazione;\r",
                  "tests [\"DataContabile is      ----->  \"+DataContabile] =DataContabile;\r",
                  "tests [\"KeyRequest is      ----->  \"+KeyRequest] =KeyRequest;\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"OK\";\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Prenotazione pagoPA effettuata con successo\";\r",
                  "tests [\"NumeroAvviso is      ----->  \"+NumeroAvviso] =NumeroAvviso ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Stato is      ----->  \"+Stato] =Stato;\r",
                  "tests [\"TipoStrumento is      ----->  \"+TipoStrumento] =TipoStrumento;\r",
                  "tests [\"TipoTransazione is      ----->  \"+TipoTransazione] =TipoTransazione ===\"PRENOTAZIONE\";\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f6a275a3-f998-4fe3-9729-34b871400645",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:dettaglioPagamentoPARequest>\r\n         <pag:RichiestaDettaglioPagamentoPA>\r\n            <pag:AbiCode>03268</pag:AbiCode>\r\n            <pag:IdPagamentoPA>{{Bookingpayment2_IdPagoPA}}</pag:IdPagamentoPA>\r\n         </pag:RichiestaDettaglioPagamentoPA>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:dettaglioPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC3_Verify the payment details when user give Booking payment_IdPagoPA status is CANCELLATO",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2a236e5c-add6-45f3-bd03-618da718a627",
                "exec": [
                  "\r",
                  "var title = \"TC3_Verify the payment details when user give Booking payment_IdPagoPA status is CANCELLATO\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var CdrRiferimento = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CdrRiferimento\"];\r",
                  "\r",
                  "var CodiceContestoPagamento = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CodiceContestoPagamento\"];\r",
                  "pm.environment.set(\"CANCELLATO_CodiceContestoPagamento\",CodiceContestoPagamento);\r",
                  "\r",
                  "var DenominazioneBeneficiario= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DenominazioneBeneficiario\"];\r",
                  "\r",
                  "var Divisa= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Divisa\"];\r",
                  "\r",
                  "var DataTransazione= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DataTransazione\"];\r",
                  "\r",
                  "var DataContabile= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:DataContabile\"];\r",
                  "\r",
                  "var KeyRequest= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:KeyRequest\"];\r",
                  "\r",
                  "var CredenzialiPagatore= jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:CredenzialiPagatore\"];\r",
                  "\r",
                  "var LocalitaBeneficiario = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:LocalitaBeneficiario\"];\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "var NumeroAvviso = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:NumeroAvviso\"];\r",
                  "\r",
                  "var importo =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Importo\"];\r",
                  "\r",
                  "var Stato =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:Stato\"];\r",
                  "\r",
                  "var TipoStrumento =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:TipoStrumento\"];\r",
                  "\r",
                  "var TipoTransazione =jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:PagamentoPAView\"][\"inp1:TipoTransazione\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"CdrRiferimento is -->\"+CdrRiferimento]=CdrRiferimento;\r",
                  "tests[\"CodiceContestoPagamento is -->\"+CodiceContestoPagamento]=CodiceContestoPagamento;\r",
                  "tests[\"DenominazioneBeneficiario is -->\"+DenominazioneBeneficiario]=DenominazioneBeneficiario;\r",
                  "tests [\"Divisa is      ----->  \"+Divisa] =Divisa;\r",
                  "tests [\"DataTransazione is      ----->  \"+DataTransazione] =DataTransazione;\r",
                  "tests [\"DataContabile is      ----->  \"+DataContabile] =DataContabile;\r",
                  "tests [\"KeyRequest is      ----->  \"+KeyRequest] =KeyRequest;\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"OK\";\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Prenotazione pagoPA annullata con successo\";\r",
                  "tests [\"NumeroAvviso is      ----->  \"+NumeroAvviso] =NumeroAvviso ;\r",
                  "tests [\"Importo is      ----->  \"+importo] =importo;\r",
                  "tests [\"Stato is      ----->  \"+Stato] =Stato;\r",
                  "tests [\"TipoStrumento is      ----->  \"+TipoStrumento] =TipoStrumento;\r",
                  "tests [\"TipoTransazione is      ----->  \"+TipoTransazione] =TipoTransazione ===\"ANNULLO_PRENOTAZIONE\";\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6c178142-e4a5-412e-aa81-f2aef25a4beb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:dettaglioPagamentoPARequest>\r\n         <pag:RichiestaDettaglioPagamentoPA>\r\n            <pag:AbiCode>03268</pag:AbiCode>\r\n            <pag:IdPagamentoPA>{{Bookingpayment_IdPagoPA}}</pag:IdPagamentoPA>\r\n         </pag:RichiestaDettaglioPagamentoPA>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:dettaglioPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC4_Verify the payment details when user give IdPagamentoPA = EMPTY",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC4_Verify the payment details when user give IdPagamentoPA = EMPTY \";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Errore durante la ricerca pagamenti PagoPA. Valorizzare il campo obbligatorio idPagamentoPA\";\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "4d45956d-986e-4ec1-b04a-72db5c0863c1"
              }
            }
          ],
          "_postman_id": "698954ed-1fb4-4029-9b1e-c0c96fcdce43",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:dettaglioPagamentoPARequest>\r\n         <pag:RichiestaDettaglioPagamentoPA>\r\n            <pag:AbiCode>03268</pag:AbiCode>\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n         </pag:RichiestaDettaglioPagamentoPA>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token></bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:dettaglioPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC5_Verify the payment details when user give IdPagamentoPA = WRONG",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC5_Verify the payment details when user give IdPagamentoPA = WRONG \";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:dettaglioPagamentoPAResponse\"][\"inp1:RipostaDettaglioPagamentoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito ===\"KO\";\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Nessun record trovato\";\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "e8b1b44f-f1a0-40d5-973d-49ab795952d1"
              }
            }
          ],
          "_postman_id": "25be878d-7c51-4ef4-bc1a-4e75823a3282",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:dettaglioPagamentoPARequest>\r\n         <pag:RichiestaDettaglioPagamentoPA>\r\n            <pag:AbiCode>03268</pag:AbiCode>\r\n            <pag:IdPagamentoPA>18093448038234340</pag:IdPagamentoPA>\r\n         </pag:RichiestaDettaglioPagamentoPA>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:dettaglioPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        }
      ],
      "_postman_id": "adc09765-3c0a-4d24-8f39-edce86579668"
    },
    {
      "name": "RicercaPagamentoPa",
      "item": [
        {
          "name": "TC1_Verify the List of records details when user give DataContabileFrom and DataContabileTo Date is VALID and count=10",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "937bd495-5dca-47e9-a0fe-bf1599e516ba",
                "exec": [
                  "\r",
                  "var title = \"TC1_Verify the List of records details when user give DataContabileFrom and DataContabileTo Date is VALID and count=10\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6198d5fd-9497-4e72-aaf9-9ae5a9d3d099",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom>21/03/2021</pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo>01/09/2021</pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC2_Verify the list of record when user give DataContabileFrom=01/01/1991 and DataContabileFrom= today date and count=100",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cf6f1aa1-9ae5-4a58-8ddb-d1fc6bb7f83e",
                "exec": [
                  "\r",
                  "var title = \"TC2_Verify the list of record when user give DataContabileFrom=01/01/1991 and DataContabileFrom= today date and count=100\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "87680475-0038-446e-81d6-1d36d4e98dca",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom>01/01/1991</pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo>{{today}}</pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>100</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC3_Verify the list of record when user give DataContabileFrom & DataContabileFrom = today_date and count=100",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "113e0ec2-0c6b-4354-8f59-1e22c4ac5e17",
                "exec": [
                  "\r",
                  "var title = \"TC3_Verify the list of record when user give DataContabileFrom & DataContabileFrom = today_date and count=100\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "1eedd484-b037-4d40-8e22-5816f14142a8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom>{{today}}</pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo>{{today}}</pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC4_Verify the list of record when user give DataContabileFrom date is greater than DataContabileTO date",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC4_Verify the list of record when user give DataContabileFrom date is greater than DataContabileTO date\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"KO\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"datacontabileFrom deve essere minore di datacontabileTo\";"
                ],
                "type": "text/javascript",
                "id": "c82b8f39-4b5a-4450-b557-10aa577c60f9"
              }
            }
          ],
          "_postman_id": "0b766d35-f8a5-42cb-bced-7b1b774fa935",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom>25/05/2021</pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo>20/05/2021</pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC5_Verify the list of record when user give Valid Conto_ordinate",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c98fc64-b02f-44c2-ac16-065f6671144d",
                "exec": [
                  "\r",
                  "var title = \"TC5_Verify the list of record when user give Valid Conto_ordinate\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a03bbbcd-7576-4651-b531-d3574e953161",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC6_Verify the list of record when user give Conto_ordinate= INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC6_Verify the list of record when user give Conto_ordinate= INVALID\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:ricercaPagamentoPAResponse\"][\"inp1:RipostaRicercaNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:ricercaPagamentoPAResponse\"][\"inp1:RipostaRicercaNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito === \"KO\";\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Conto non censito correttamente. Eccezione proveniente dal SS ACFW: -Il numero conto O76532762323 non esiste\";"
                ],
                "type": "text/javascript",
                "id": "0a9277d5-6b42-4a0c-bb98-c4efee0c3b75"
              }
            }
          ],
          "_postman_id": "980fc6b6-0f21-47ac-ad48-8f74576af351",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>O76532762323</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC7_Verify the list of records when user give DataTransazioneFrom and DataTransazioneTo date is VALID and count=10",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "132f390b-c86d-4f05-a261-3c58333f6c14",
                "exec": [
                  "\r",
                  "var title = \"TC7_Verify the list of records when user give DataTransazioneFrom and DataTransazioneTo date is VALID and count=10\";\r",
                  "tests[title]= title;\r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "a077cba2-ecad-4d2d-8337-c493ee8cbe4f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom>21/03/2021</pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo>01/09/2021</pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC8_Verify the list of record when user give DataTransazioneFrom date is greater than DataTransazioneFrom date",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC8_Verify the list of record when user give DataTransazioneFrom date is greater than DataTransazioneTO date\";\r",
                  "tests[title]= title; \r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"KO\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"datatransazioneFrom deve essere minore di datatransazioneTo\";"
                ],
                "type": "text/javascript",
                "id": "40f126da-7f1c-42dc-8802-a169857ed3c9"
              }
            }
          ],
          "_postman_id": "eeb37a93-abe0-4627-bd5b-e8178474a47e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante>{{Contoordinate}}</pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom>26/05/2021</pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo>25/05/2021</pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC9_PAGATO- Verify the payment details when user give IdentificativoPA is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC9_PAGATO- Verify the payment details when user give IdentificativoPA is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "ee454f94-7e4b-4593-9b61-0a80231ab005"
              }
            }
          ],
          "_postman_id": "723ea538-637f-4fed-8a9e-63012bad534f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA>{{payment_IdPagoPA}}</pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC10_CANCELLATO- Verify the payment details when user give IdentificativoPA is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC10_CANCELLATO- Verify the payment details when user give IdentificativoPA is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "e155cbdf-6901-4bb8-b7b3-ebd58e27f467"
              }
            }
          ],
          "_postman_id": "0c3936f4-4326-4db2-af19-afa11e81e6d7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA>{{Bookingpayment_IdPagoPA}}</pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC11_PRENATO- Verify the payment details when user give IdentificativoPA is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC11_PRENATO- Verify the payment details when user give IdentificativoPA is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "b1279e2d-20b8-4604-9631-bf8b5ab27a46"
              }
            }
          ],
          "_postman_id": "36f76409-6015-4988-b645-84ed9e35a887",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA>{{Bookingpayment2_IdPagoPA}}</pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC12_Verify the payment details when user give IdentificativoPA is INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC12_Verify the payment details when user give IdentificativoPA is INVALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "\r",
                  "var Esito = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:ricercaPagamentoPAResponse\"][\"inp1:RipostaRicercaNodoPA\"][\"inp1:Esito\"];\r",
                  "\r",
                  "var Motivazione = jsonData[\"soapenv:Envelope\"][\"S:Body\"][\"inp1:ricercaPagamentoPAResponse\"][\"inp1:RipostaRicercaNodoPA\"][\"inp1:Motivazione\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests [\"Esito status is      ----->  \"+Esito] =Esito === \"OK\";\r",
                  "tests [\"Motivazione is      ----->  \"+Motivazione] =Motivazione ===\"Non e' presente nessun pagamento PagoPA per i criteri di ricerca selezionati\";"
                ],
                "type": "text/javascript",
                "id": "7f26e6f1-1995-4387-b670-dd556f441e3e"
              }
            }
          ],
          "_postman_id": "bffd1bc8-08a9-4ad7-a7bb-3195ee778ecd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA>435666</pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC13_Verify the payment details when user give NumeroAvviso is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC13_Verify the payment details when user give NumeroAvviso is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "7b35bd4c-9e43-4a08-ba38-ae4afaf4906a"
              }
            }
          ],
          "_postman_id": "4a81de32-ad93-48f5-94fa-a695667ac019",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso>{{Ricerca_Numeroavviso}}</pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC14_Verify the payment details when user give NumeroAvviso is INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC14_Verify the payment details when user give NumeroAvviso is INVALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"OK\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"Non e' presente nessun pagamento PagoPA per i criteri di ricerca selezionati\";"
                ],
                "type": "text/javascript",
                "id": "f0d90b4c-e4c5-49f6-8105-f78ccb723014"
              }
            }
          ],
          "_postman_id": "1b5caff6-cc3b-4a02-9db0-b62cd75fe0d0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso>18306982980244755806</pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC15_Verify the payment details when user give NumeroOperazioneContabile is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC15_Verify the payment details when user give NumeroOperazioneContabile is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript",
                "id": "74d20672-7323-4b4d-b590-bc22c52b7906"
              }
            }
          ],
          "_postman_id": "5ef5a262-456e-4af4-9c0a-3871dc4ce22d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile>{{payment_NumeroOperazioneContabile}}</pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC16_Verify the payment details when user give NumeroOperazioneContabile is INVALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC16_Verify the payment details when user give NumeroOperazioneContabile is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"OK\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"Non e' presente nessun pagamento PagoPA per i criteri di ricerca selezionati\";"
                ],
                "type": "text/javascript",
                "id": "32074a49-810c-40eb-8969-a03cd1c2cafd"
              }
            }
          ],
          "_postman_id": "589fefa8-db45-4696-8a6a-095aa7874365",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile>2100004662994745</pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC17_PAGATO - Verify the payment details when user give CodiceContestoPagamento is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC17_PAGATO - Verify the payment details when user give CodiceContestoPagamento is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript",
                "id": "7d2b34ad-d962-43b1-928d-a5c42a94ca99"
              }
            }
          ],
          "_postman_id": "13bf29b8-1218-48ac-a9e9-f3e5a5635553",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento>{{Pagato_CodiceContestoPagamento}}</pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC18_PRENATO - Verify the payment details when user give CodiceContestoPagamento is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC18_PRENATO - Verify the payment details when user give CodiceContestoPagamento is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript",
                "id": "7fbdf0f4-0e0b-439e-a3f2-0bd397495c0f"
              }
            }
          ],
          "_postman_id": "5242f152-2a6d-4cf9-804c-baaddd3a9fb9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento>{{PRENATO_CodiceContestoPagamento}}</pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC19_CANCELLETO - Verify the payment details when user give CodiceContestoPagamento is VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC19_CANCELLETO - Verify the payment details when user give CodiceContestoPagamento is VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript",
                "id": "6a4257f9-c217-4ff4-98d4-063334a74025"
              }
            }
          ],
          "_postman_id": "dfd1b789-ef38-44c8-bf2b-2994aa47bdcd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento>{{CANCELLATO_CodiceContestoPagamento}}</pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC20_Verify the list of records when user give ModalitaPagamento=WEB",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7faccbfd-4d65-457f-bdeb-b6c60d3632b6",
                "exec": [
                  "\r",
                  "var title = \"TC23_Verify the list of records when user give ModalitaPagamento=AGE\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment===10;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "12a81ecc-8783-46e7-ba2b-36e7503b504b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento>WEB</pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC21_Verify the list of records when user give Canale=0017",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "55ee3ae4-8b83-43f7-aa6d-4f8929093151",
                "exec": [
                  "\r",
                  "var title = \"TC21_Verify the list of records when user give Canale=0017\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment===10;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "2278f3d8-fce0-488c-b411-54103d4e516d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale>0017</pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC22_Verify the list of records when user give Canale=0016",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC22_Verify the list of records when user give Canale=0016\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"OK\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"Non e' presente nessun pagamento PagoPA per i criteri di ricerca selezionati\";"
                ],
                "type": "text/javascript",
                "id": "eee51421-4517-421d-ae01-1ef777c34859"
              }
            }
          ],
          "_postman_id": "69178b1b-d95b-47a7-bcbe-4c912f02c4b4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale>0016</pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC23_Verify the list of records when user give ModalitaPagamento=AGE",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC20_Verify the list of records when user give ModalitaPagamento=WEB\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"OK\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"Non e' presente nessun pagamento PagoPA per i criteri di ricerca selezionati\";"
                ],
                "type": "text/javascript",
                "id": "f7f3cc97-83f1-4543-b65c-0958fa178d37"
              }
            }
          ],
          "_postman_id": "615d47a9-0bf9-4b0c-bf28-a1f2f22dde09",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento>AGE</pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC24_Verify the list of records when user give ImportoFrom=1.00 and ImportoFrom=3000.00",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "864d3bea-d66f-44ae-8c2d-2a437546d783",
                "exec": [
                  "\r",
                  "var title = \"TC24_Verify the list of records when user give ImportoFrom=1.00 and ImportoTO=3000.00\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment===10;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "4e4bf098-1ef3-41b9-9001-efc208c7b8e6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom>1.00</pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo>3000.00</pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC25_Verify the list of records when user give ImportoFrom amount is greater than ImportoTO amount",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC25_Verify the list of records when user give ImportoFrom amount is greater than ImportoTO amount\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"KO\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"importoFrom deve essere minore di importoTo\";"
                ],
                "type": "text/javascript",
                "id": "2b8b5d6c-e6c7-42ec-b9cd-25c6f6fc1423"
              }
            }
          ],
          "_postman_id": "b618485c-2861-42ab-b4cc-951dec42c23f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom>10.00</pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo>8.00</pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC26_Verify the list of records when user give ImportoFrom=EMPTY and ImportoTO=10.00",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC26_Verify the list of records when user give ImportoFrom=EMPTY and ImportoTO=10.00 \";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"KO\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"Errore durante la ricerca pagamenti PagoPA. Valorizzare entrambi i valori di intervallo per importo\";"
                ],
                "type": "text/javascript",
                "id": "269db8e7-416c-45db-99d5-4da63fb5bbcf"
              }
            }
          ],
          "_postman_id": "f849aa4a-82e1-4c18-850e-1850ea40e1d4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo>10.00</pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC27_Verify the list of records when user give ImportoFrom=10.00 and ImportoTO=EMPTY",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC27_Verify the list of records when user give ImportoFrom=10.00 and ImportoTO=EMPTY\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:Motivazione'];\r",
                  "\r",
                  "tests[\"Esito is -->\"+Esito]=Esito === \"KO\";\r",
                  "tests[\"Motivazione is -->\"+Motivazione]=Motivazione ===\"Errore durante la ricerca pagamenti PagoPA. Valorizzare entrambi i valori di intervallo per importo\";"
                ],
                "type": "text/javascript",
                "id": "a5ea5c6f-2acf-4326-8126-944aa1e7e746"
              }
            }
          ],
          "_postman_id": "9f124628-4432-40d5-9f6f-791703f5eba5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo>10.00</pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC28_Verify the list of records when user give IdTransazioneFastbank=VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC28_Verify the list of records when user give IdTransazioneFastbank=VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var IdentificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:IdentificativoPA\"];\r",
                  "var DataContabile = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataContabile\"];\r",
                  "var DataTransazioneTimeStamp = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:DataTransazioneTimeStamp\"];\r",
                  "var Divisa = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Divisa\"];\r",
                  "var Importo = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Importo\"];\r",
                  "var MotivazioneStato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:MotivazioneStato\"];\r",
                  "var NumeroAvviso = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:NumeroAvviso\"];\r",
                  "var Stato = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'][\"inp1:Stato\"];\r",
                  "\r",
                  "\r",
                  "\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript",
                "id": "769fd40d-42d9-4122-a927-845a1ff28388"
              }
            }
          ],
          "_postman_id": "39f32ab1-237f-4cab-8d68-458b3293a47d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank>{{IdTransazione}}</pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC29_Verify the list of records when user give IBUsercode=VALID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76b9f92f-a38e-4bce-b864-5903ca70aea7",
                "exec": [
                  "\r",
                  "var title = \"TC29_Verify the list of records when user give IBUsercode=VALID\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c9174c39-4d93-491b-98c5-eddb48a80a2a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode>{{IBUserCode}}</pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato></pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC30_Verify the list of records when user give Stato=PAGATO",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b33d7b01-3656-4662-adac-79bd0a39741e",
                "exec": [
                  "\r",
                  "var title = \"TC30_Verify the list of records when user give Stato=PAGATO\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment===10;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "ca4b4a7c-4b70-4a33-83c9-c630af1494c7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato>PAGATO</pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC31_Verify the list of records when user give Stato=PRENOTATO",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03b14d4e-7a6f-4a5d-94b1-e5e3af480dca",
                "exec": [
                  "\r",
                  "var title = \"TC31_Verify the list of records when user give Stato=PRENOTATO\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment===10;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "3772c4de-2806-4c13-ac35-58fae87878d6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato>PRENOTATO</pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC32_Verify the list of records when user give Stato=CANCELLATO",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "261eb8b9-783f-4bb4-b233-355c7aab40bf",
                "exec": [
                  "\r",
                  "var title = \"TC32_Verify the list of records when user give Stato=CANCELLATO\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment===10;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "828fb3b6-f4a6-46b1-950e-6a4394c467fb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato>CANCELLATO</pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC33_Verify the list of records when user give Stato=INSERITO",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "97913d99-c56e-400a-a700-c21b3a371b9f",
                "exec": [
                  "\r",
                  "var title = \"TC33_Verify the list of records when user give Stato=INSERITO\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:ricercaPagamentoPAResponse']['inp1:RipostaRicercaNodoPA']['inp1:PagamentoPALightView']['inp1:PagamentoPA'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var NumeroAvviso = [];\r",
                  "var DataContabile =[];\r",
                  "var DataTransazioneTimeStamp=[];\r",
                  "var Divisa=[];\r",
                  "var Stato=[];\r",
                  "var Importo=[];\r",
                  "var MotivazioneStato=[];\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var noofpayment = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "NumeroAvviso.push(root[j]['inp1:NumeroAvviso'])\r",
                  "DataContabile.push(root[j]['inp1:DataContabile'])\r",
                  "DataTransazioneTimeStamp.push(root[j]['inp1:DataTransazioneTimeStamp'])\r",
                  "Divisa.push(root[j]['inp1:Divisa'])\r",
                  "Stato.push(root[j]['inp1:Stato'])\r",
                  "Importo.push(root[j]['inp1:Importo'])\r",
                  "MotivazioneStato.push(root[j]['inp1:MotivazioneStato'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "tests[\"Number of payment  is -->\"+noofpayment]=noofpayment===10;\r",
                  "tests[\"NumeroAvviso is -->\"+NumeroAvviso]=NumeroAvviso;\r",
                  "tests[\"DataContabile is -->\"+DataContabile]=DataContabile;\r",
                  "tests[\"DataTransazioneTimeStamp is -->\"+DataTransazioneTimeStamp]=DataTransazioneTimeStamp;\r",
                  "tests[\"Divisa is -->\"+Divisa]=Divisa;\r",
                  "tests[\"Stato is -->\"+Stato]=Stato;\r",
                  "tests[\"Importo is -->\"+Importo]=Importo;\r",
                  "tests[\"MotivazioneStato is -->\"+MotivazioneStato]=MotivazioneStato;"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "278eedaf-f43b-4a58-a356-0cc2f51c434e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:ricercaPagamentoPARequest>\r\n         <pag:RichiestaRicercaNodoPA>\r\n            <pag:AbiBanca>03268</pag:AbiBanca>\r\n            <!--Optional:-->\r\n            <pag:ContoList>\r\n               <!--1 or more repetitions:-->\r\n               <pag:ContoOrdinante></pag:ContoOrdinante>\r\n            </pag:ContoList>\r\n            <!--Optional:-->\r\n            <pag:IBUserCode></pag:IBUserCode>\r\n            <pag:Product>0</pag:Product>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneFrom></pag:DataTransazioneFrom>\r\n            <!--Optional:-->\r\n            <pag:DataTransazioneTo></pag:DataTransazioneTo>\r\n            <!--Optional:-->\r\n            <pag:DataContabileFrom></pag:DataContabileFrom>\r\n            <!--Optional:-->\r\n            <pag:DataContabileTo></pag:DataContabileTo>\r\n            <!--Optional:-->\r\n            <pag:ImportoFrom></pag:ImportoFrom>\r\n            <!--Optional:-->\r\n            <pag:ImportoTo></pag:ImportoTo>\r\n            <!--Optional:-->\r\n            <pag:IdentificativoPA></pag:IdentificativoPA>\r\n            <!--Optional:-->\r\n            <pag:NumeroAvviso></pag:NumeroAvviso>\r\n            <!--Optional:-->\r\n            <pag:NumeroOperazioneContabile></pag:NumeroOperazioneContabile>\r\n            <!--Optional:-->\r\n            <pag:IdTransazioneFastbank></pag:IdTransazioneFastbank>\r\n            <!--Optional:-->\r\n            <pag:IdPagamentoPA></pag:IdPagamentoPA>\r\n            <!--Optional:-->\r\n            <pag:IdBonificoPA></pag:IdBonificoPA>\r\n            <!--Optional:-->\r\n            <pag:Canale></pag:Canale>\r\n            <!--Optional:-->\r\n            <pag:ModalitaPagamento></pag:ModalitaPagamento>\r\n            <!--Optional:-->\r\n            <pag:CodiceContestoPagamento></pag:CodiceContestoPagamento>\r\n            <!--Optional:-->\r\n            <pag:Stato>INSERITO</pag:Stato>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Count>10</pag:Count>\r\n                  <pag:Offset>1</pag:Offset>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaRicercaNodoPA>\r\n         <pag:MessageContext>\r\n              <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n\r\n         </pag:MessageContext>\r\n      </pag:ricercaPagamentoPARequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        }
      ],
      "_postman_id": "9df391e3-c400-492f-8d17-eafa9fe2ebf3"
    },
    {
      "name": "PaList",
      "item": [
        {
          "name": "TC1_Validate the palist details when user give SearchpaString=B",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC1_Validate the palist details when user give SearchpaString=B\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "\r",
                  "var identificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:identificativoPA'];\r",
                  "\r",
                  "var descrizione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:descrizione'];\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"OK\";\r",
                  "tests[\"identificativoPA  is -->\"+identificativoPA]=identificativoPA;\r",
                  "\r",
                  "tests[\"descrizione  is -->\"+descrizione]=descrizione;"
                ],
                "type": "text/javascript",
                "id": "3e0f4b05-083c-40dd-8e09-28c3a6376e0c"
              }
            }
          ],
          "_postman_id": "583c815c-78e1-4ce5-b74f-1925f0d716b7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>B</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>10</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC2_Validate the palist details when user give SearchpaString=C",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC2_Validate the palist details when user give SearchpaString=C\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "\r",
                  "var identificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:identificativoPA'];\r",
                  "\r",
                  "var descrizione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:descrizione'];\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"OK\";\r",
                  "tests[\"identificativoPA  is -->\"+identificativoPA]=identificativoPA;\r",
                  "\r",
                  "tests[\"descrizione  is -->\"+descrizione]=descrizione;"
                ],
                "type": "text/javascript",
                "id": "640c9903-65e4-472b-a5c5-0829b64eba73"
              }
            }
          ],
          "_postman_id": "1e4c2be0-8115-4c7c-8bae-28bbb7eaca59",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>C</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>10</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC3_Validate the palist details when user give SearchpaString=V and offset= -1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC3_Validate the palist details when user give SearchpaString=V and offset= -1\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var root = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView'];\r",
                  "console.log(root);\r",
                  "\r",
                  "var identificativoPA = [];\r",
                  "var descrizione =[];\r",
                  "\r",
                  "\r",
                  "// loop through the collection\r",
                  "for(var j = 0; j< root.length; j++) {\r",
                  "var Palist = root.length;\r",
                  "//pm.environment.set(\"noofpaymentdate\", noofpaymentdate);\r",
                  "identificativoPA.push(root[j]['identificativoPA'])\r",
                  "descrizione.push(root[j]['inp1:descrizione'])\r",
                  "\r",
                  "}\r",
                  "\r",
                  "//tests[\"identificativoPA  is -->\"+ identificativoPA +'' ]=identificativoPA;\r",
                  "tests[\"Number of palist for the given string -->\"+Palist]=Palist;\r",
                  "tests[\"descrizione is -->\"+descrizione]=descrizione;\r",
                  "\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "3a874179-d0b3-4c10-acb3-54b985476940"
              }
            }
          ],
          "_postman_id": "435a37b8-9bd8-4841-bb5a-1bf5b5dd8e21",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>C</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>-1</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC4_Validate the palist details when user give SearchpaString=D and offset= 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC4_Validate the palist details when user give SearchpaString=D and offset= 1\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "\r",
                  "var identificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:identificativoPA'];\r",
                  "\r",
                  "var descrizione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:descrizione'];\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"OK\";\r",
                  "tests[\"identificativoPA  is -->\"+identificativoPA]=identificativoPA;\r",
                  "\r",
                  "tests[\"descrizione  is -->\"+descrizione]=descrizione;"
                ],
                "type": "text/javascript",
                "id": "9ab2c841-4412-40d3-bc0e-85d905a503aa"
              }
            }
          ],
          "_postman_id": "e7478762-ab8c-4eba-9932-6fff7849f034",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>C</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>1</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC5_Validate the palist details when user give SearchpaString=A and offset= 100",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC5_Validate the palist details when user give SearchpaString=A and offset= 100\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "\r",
                  "var identificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:identificativoPA'];\r",
                  "\r",
                  "var descrizione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:descrizione'];\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"OK\";\r",
                  "tests[\"identificativoPA  is -->\"+identificativoPA]=identificativoPA;\r",
                  "\r",
                  "tests[\"descrizione  is -->\"+descrizione]=descrizione;"
                ],
                "type": "text/javascript",
                "id": "b5b0178e-a1d6-43ca-92e0-ed2b9ee09890"
              }
            }
          ],
          "_postman_id": "04789032-5e1f-4304-8349-9c2de8c7cbf9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>C</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>100</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC6_Validate the palist details when user give SearchpaString=AA",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC6_Validate the palist details when user give SearchpaString=AA\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "\r",
                  "var identificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:identificativoPA'];\r",
                  "\r",
                  "var descrizione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:descrizione'];\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"OK\";\r",
                  "tests[\"identificativoPA  is -->\"+identificativoPA]=identificativoPA;\r",
                  "\r",
                  "tests[\"descrizione  is -->\"+descrizione]=descrizione;"
                ],
                "type": "text/javascript",
                "id": "4024bd66-9cd4-4c9e-b5d0-5c9bf6b7303f"
              }
            }
          ],
          "_postman_id": "87bf872b-75e0-42d2-bc2e-67ca281092bc",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>AA</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>1</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC7_Validate the palist details when user give SearchpaString=12(number)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC7_Validate the palist details when user give SearchpaString=12(number)\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "\r",
                  "var identificativoPA = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:identificativoPA'];\r",
                  "\r",
                  "var descrizione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:PAViewList']['inp1:PADetailView']['inp1:descrizione'];\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"OK\";\r",
                  "tests[\"identificativoPA  is -->\"+identificativoPA]=identificativoPA;\r",
                  "\r",
                  "tests[\"descrizione  is -->\"+descrizione]=descrizione;"
                ],
                "type": "text/javascript",
                "id": "34d2bf30-4115-4f27-a67a-b178fe5a1a5c"
              }
            }
          ],
          "_postman_id": "e33f2efb-0384-4f01-a405-48a835576fc1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>12</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>1</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC8_Validate error response message when offset=EMPTY",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC8_Validate error response message when offset=EMPTY\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Motivazione'];\r",
                  "\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"KO\";\r",
                  "tests[\"Motivazione  is -->\"+Motivazione]=Motivazione;\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "c8768fb8-f00b-452d-a771-060b7b7d097f"
              }
            }
          ],
          "_postman_id": "ace893d5-87e2-4f9a-bf55-e17a32b79e8f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString></pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset></pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        },
        {
          "name": "TC9_Validate the response message when user give special character in Searchpastring field",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "\r",
                  "var title = \"TC9_Validate the response message when user give special character in Searchpastring field\";\r",
                  "tests[title]= title; \r",
                  "\r",
                  "//postman success validation\r",
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);\r",
                  "});\r",
                  "var jsonData = xml2Json(responseBody);\r",
                  "console.log(\"JSON response\", jsonData);\r",
                  "\r",
                  "var Esito = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Esito'];\r",
                  "\r",
                  "var Motivazione = jsonData['soapenv:Envelope']['S:Body']['inp1:PAListResponse']['inp1:RispostaPAList']['inp1:Motivazione'];\r",
                  "\r",
                  "\r",
                  "tests[\"Esito  is -->\"+Esito]=Esito===\"OK\";\r",
                  "tests[\"Motivazione  is -->\"+Motivazione]=Motivazione===\"Non e' presente nessun pagamento PagoPA per i criteri di ricerca selezionati\";\r",
                  ""
                ],
                "type": "text/javascript",
                "id": "be16767d-259b-45d8-9e62-e7108f43fadc"
              }
            }
          ],
          "_postman_id": "21e0fe9f-1133-4c49-bb72-fa5c7c846753",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:pag=\"http://www.sella.it/schema/sistemidipagamentoTradizionali/pagamentonodopa\" xmlns:bas=\"http://www.sella.it/schema/Basics\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <pag:PAListRequest>\r\n         <pag:RichiestaPAList>\r\n            <!--Optional:-->\r\n            <pag:searchPAString>WQ!</pag:searchPAString>\r\n            <pag:Segment>\r\n               <pag:Entry>\r\n                  <pag:Offset>0</pag:Offset>\r\n                  <pag:Count>1</pag:Count>\r\n               </pag:Entry>\r\n            </pag:Segment>\r\n         </pag:RichiestaPAList>\r\n         <pag:MessageContext>\r\n            <bas:Sender>InternetBanking</bas:Sender>\r\n            <bas:ABI>03268</bas:ABI>\r\n            <!--Optional:-->\r\n            <bas:Auth-Token>{{Nodapa_token}}</bas:Auth-Token>\r\n         </pag:MessageContext>\r\n      </pag:PAListRequest>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
              "options": {
                "raw": {
                  "language": "xml"
                }
              }
            },
            "url": "{{Pagopa_URL}}"
          },
          "response": []
        }
      ],
      "_postman_id": "0b1f0afe-8e48-4d4e-a83c-6f1a6c549fa3"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "9ec10ff5-6e82-4dbf-ac0f-aaaf954b1338"
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "//current date",
          "var moment= require('moment');",
          "postman.setEnvironmentVariable(\"today\",moment().format(\"DD/MM/YYYY\"));",
          "",
          "//futuredate",
          "var next_sevendays=moment().add(7,'days')",
          "postman.setEnvironmentVariable(\"BookingPayment\",moment(next_sevendays).format(\"DD/MM/YYYY\"));"
        ],
        "id": "e328fbe5-d48a-47f4-a925-96d0bf163948"
      }
    }
  ]
}